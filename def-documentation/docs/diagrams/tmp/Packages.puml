@startuml

skinparam monochrome true
skinparam style strictuml
'skinparam handwritten true
'skinparam linetype polyline


package "base-datatypes" as basedatatypes {}
package "manager-webapp" as managerwebapp {}
package "cloud-communication" as cloudcommunication {}
package "cloud-communication-api" as cloudcommunicationapi {}
package cluster {}
package "cluster-api" as clusterapi {}
package common {}
package communication {}
package "communication-api" as communicationapi {}
package configuration {}
package "demo-routines" as demoroutines {}
package domain {}
package "execlogic-api" as execlogicapi {}
package "library-api" as libraryapi {}
package manager {}
package "manager-api" as managerapi {}
package persistence {}
package "persistence-metamodel" as persistencemetamodel {}
package "routine-api" as routineapi {}
package scheduler {}
package "def-shell" as defshell {}
package "scheduler-api" as schedulerapi {}
package security {}
package transfer {}
package "transfer-util" as transferutil {}
package worker {}
package reducer {}
package "execlogic-api" as execlogicapi {}
package "execlogic" as execlogic {}
package "client-api" as clientapi {}
package "reducer-api" as reducerapi {}
package logging {}
package "worker-api" as workerapi {}
package "base-node-observer-api" as basenodeobserverapi {}
package "base-node-api" as basenodeapi {}
package "base-node-impl" as basenodeimpl {}
package "local-simulator" as localsimulator {}
package library {}
package "library-api" as libraryapi {}
package "library-admin-api" as libraryadminapi {}

'''' D E P S ''''


cluster ...> clusterapi : use
execlogic <.. cluster : use
cluster ...> cloudcommunicationapi : use
cluster ...> schedulerapi : use
cluster ...> workerapi : use

manager ....> persistence : use
manager ...> managerapi : use
manager ...> clusterapi : use
execlogic <.. manager : use

communication ...> configuration : use
communication .....> communicationapi : use

domain ..> transfer : use
domain ..> logging : use

managerapi ..> execlogicapi : use

clusterapi ..> execlogicapi : use

workerapi ...> communicationapi : use

libraryapi ...> communicationapi : use
libraryapi ..> transferutil : use
libraryapi ..> demoroutines : use

communicationapi ..> security : use
communicationapi ..> logging : use

persistencemetamodel ..> domain : use

persistence ....> configuration : use
persistence ..> transferutil : use
persistence ..> persistencemetamodel : use

security ..> transfer : use

transferutil ..> domain : use

transfer ..> common : use

worker ...> workerapi : use
worker ...> basenodeimpl : use

demoroutines .> routineapi : use

routineapi ..> basedatatypes : use
routineapi ..> logging : use

configuration ..> logging : use

managerwebapp ..> managerapi : use
communication <... managerwebapp : use

execlogicapi ..> communicationapi : use

schedulerapi ..> basenodeapi : use

scheduler ...> schedulerapi : use
scheduler ...> clusterapi : use
scheduler ...> reducerapi : use
scheduler ...> workerapi : use
communication <.. scheduler : use

logging ...> common : use

execlogic ...> execlogicapi : use
communication <.. execlogic : use

cloudcommunication ...> cloudcommunicationapi : use

clientapi ...> execlogicapi : use

libraryadminapi <.... defshell : use
managerapi <.... defshell : use
clusterapi <.... defshell : use
workerapi <.... defshell : use

library ...> libraryadminapi : use
communication <... library : use
library ....> persistence : use
library ....> demoroutines : use

libraryadminapi .> libraryapi : use

localsimulator ....> worker : use
localsimulator ...> execlogic : use
localsimulator ....> library : use

libraryapi <.. basenodeapi : use
basenodeapi .> basenodeobserverapi : use
basenodeapi ..> routineapi : use

basenodeimpl ..> basenodeapi : use
communication <... basenodeimpl  : use

basenodeobserverapi ....> configuration : use
basenodeobserverapi ...> communicationapi : use

reducerapi ...> communicationapi : use
reducerapi ..> basenodeapi : use

reducer ...> basenodeimpl : use
reducer ...> reducerapi : use


@enduml
