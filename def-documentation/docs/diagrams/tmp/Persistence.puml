@startuml

skinparam monochrome true
'skinparam style strictuml
'skinparam handwritten true
'skinparam linetype polyline

interface IConnectionProvider {
    + makeSimpleTransaction(IThrowingFunction<Session, T, PersistenceException> transactionFunction) : T
    + makeSimpleTransaction(IThrowingConsumer<Session, PersistenceException> transactionFunction) : void
}

interface IPersistenceFacade {
    + getNewUserDAO() : IUserDAO
    + getNewGroupDAO() : IGroupDAO
    + getNewProgramDAO() : IProgramDAO
    + getNewJobDAO() : IJobDAO
    + getNewTaskDAO() : ITaskDAO
}

interface IGenericDAO<T extends AbstractEntity<U>, U extends Serializable> {
    + findAll() : List<T>
    + findById(U id) : T
    + findSingleResultByCriteria(Function<CriteriaBuilder, CriteriaQuery<R>> queryBuilderFunction) : R
    + findByCriteria(Function<CriteriaBuilder, CriteriaQuery<R>> queryBuilderFunction) : List<R>
    + findBySQLQuery(String sql, PropertyContainer<?>... propertyContainers) : List<T>
    + refreshToActualState(T entity) : T
    + save(T entity) : Serializable
    + update(T entity) : void
    + saveOrUpdate(T entity) : void
    + delete(T entity) : void
}

interface IGroupDAO {
    + getAllProgramIds(String gId) : List<IdDTO>
}

interface IJobDAO {
    + getJobInfo(String jId) : JobDTO
    + getAllTaskIds(String jId) : List<IdDTO>
}

interface IProgramDAO {
    + getProgramInfo(String pId) : ProgramDTO
    + getAllJobIds(String pId) : List<IdDTO>
}

interface ITaskDAO {
    + getTaskInfo(String tId) : TaskDTO
}

interface IUserDAO {
    + getUserByName(String name) : User
    + getAllOwnedPrograms(String uId) : List<Program>
    + getAllGroupPrograms(String uId) : List<Program>
    + getAllPrograms(String uId) : List<Program>
    + getAllProgramIds(String uId) : List<IdDTO>
    + getAllGroups(String uId) : List<Group>
}

class GenericDAO<T extends AbstractEntity<U>, U extends Serializable> {
    - domainClass : Class<T>
    # getConnectionProvider() : IConnectionProvider
}

class GroupDAO {
}

class JobDAO {
}

class ProgramDAO {
}

class TaskDAO {
}

class UserDAO {
}

class ConnectionProvider {
    - sessionFactory : SessionFactory
    - getNewSession() : Session
}

class PersistenceFacade {
}

class PersistenceException {
}

class PropertyContainer {
    - propertyName : String
    - propertyValue : T
    + getPropertyName() : String
    + getPropertyValue() : T
}

IGroupDAO --|> IGenericDAO
IJobDAO --|> IGenericDAO
IProgramDAO --|> IGenericDAO
ITaskDAO --|> IGenericDAO
IUserDAO --|> IGenericDAO

GenericDAO ..|> IGenericDAO
GenericDAO ---- ConnectionProvider : uses >
GenericDAO ---- PropertyContainer : uses >
GenericDAO ---- PersistenceException : throws >

GroupDAO ..|> IGroupDAO
GroupDAO --|> GenericDAO

JobDAO ..|> IJobDAO
JobDAO --|> GenericDAO

ProgramDAO ..|> IProgramDAO
ProgramDAO --|> GenericDAO

TaskDAO ..|> ITaskDAO
TaskDAO --|> GenericDAO

UserDAO ..|> IUserDAO
UserDAO --|> GenericDAO

PersistenceFacade .u.|> IPersistenceFacade
PersistenceFacade -- GroupDAO : creates >
PersistenceFacade -- JobDAO : creates >
PersistenceFacade -- ProgramDAO : creates >
PersistenceFacade -- TaskDAO : creates >
PersistenceFacade -- UserDAO : creates >

ConnectionProvider ..|> IConnectionProvider

@enduml